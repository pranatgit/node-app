pipeline {
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
    }
    stages{
        stage('Build Docker Image'){
            steps{
                sh "docker build . -t pranatdocker/nodeapp:${DOCKER_TAG} "
            }
        }
        stage('DockerHub Push'){
            steps{
                withCredentials([string(credentialsId: 'docker-hub', variable: 'dockerHubPwd')]) {
                    sh "docker login -u pranatdocker -p ${dockerHubPwd}"
                    sh "docker push pranatdocker/nodeapp:${DOCKER_TAG}"
                }
            }
        }
        stage('Deploy to DevServer'){
            steps{
               
                sshagent(credentials:['dev-server']) {
                           
                    script{
                         def runCmd = "docker run -d -p 9091:8080 --name=nodeapp pranatdocker/nodeapp:${DOCKER_TAG}"
                         sh "ssh -o StrictHostKeyChecking=no ec2-user@3.135.64.190 ${runCmd}" 
                    }
                }
            }
        }
    }
}

def getDockerTag(){
    def tag  = sh script: 'git rev-parse HEAD', returnStdout: true
    return tag
}
